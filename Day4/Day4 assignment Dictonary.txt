'''
1) Write a Python program to create a dictionary of keys x, y, and z
where each key has as value a list from 11-20, 21-30, and 31-40 respectively.
Access the fifth value of each key from the dictionary.
{'x': [11, 12, 13, 14, 15, 16, 17, 18, 19],
'y': [21, 22, 23, 24, 25, 26, 27, 28, 29],
'z': [31, 32, 33, 34, 35, 36, 37, 38, 39]}
'''
dict1={'x': [11, 12, 13, 14, 15, 16, 17, 18, 19],
'y': [21, 22, 23, 24, 25, 26, 27, 28, 29],
'z': [31, 32, 33, 34, 35, 36, 37, 38, 39]}
f=dict1['x'][4]
print(f)
s=dict1['y'][4]
print(s)
t=dict1['z'][4]
print(t)

2) Write a Python script to add a key to a dictionary.
Sample Dictionary : {0: 10, 1: 20}
Expected Result : {0: 10, 1: 20, 2: 30}

dict1={0: 10, 1: 20}
dict1[2]=30
print(dict1)


3) Write a Python script to check whether a given key already exists in a dictionary.


mydict={"name":"vaibhav","age":24,"city":"jalgaon"}
key_to_chek="name"
if key_to_chek in mydict:
    print(f"Key {key_to_chek}is present in given dictonary")
else:
    print(f"Key {key_to_chek}is not present in given dictonary")
'''
4) Write a Python program to count the values associated with key in a dictionary.
Sample data: = [{'id': 1, 'success': True, 'name': 'Lary'}, {'id': 2, 'success': False, 'name': 'Rabi'}, {'id': 3, 'success': True, 'name': 'Alex'}]
Expected result: Count of how many dictionaries have success as True
'''
dict1=[{'id': 1, 'success': True, 'name': 'Lary'}, {'id': 2, 'success': False, 'name': 'Rabi'}, {'id': 3, 'success': True, 'name': 'Alex'}]
count=0
for item in dict1:
    if 'success' in item and item['success'] == True:
        count+=1
print("Count of dictionaries with 'success' as True:", count)


6) Write a Python program to check a dictionary is empty or not.

list1={}
if len(list1)==0:
    print("dictionary is empty")
else:
    print("dictionary is not empty")

7) Write a Python program to combine two dictionary adding values for common keys. 
d1 = {'a': 100, 'b': 200, 'c':300}
d2 = {'a': 300, 'b': 200, 'd':400}
Sample output: Counter({'a': 400, 'b': 400, 'd': 400, 'c': 300}) 
from Collections import Counter
d1 = {'a': 100, 'b': 200, 'c': 300}
d2 = {'a': 300, 'b': 200, 'd': 400}

# Combine the dictionaries and add values for common keys using Counter
result = Counter(d1) + Counter(d2)


# Print the combined dictionary
print(result)
8) Write a Python program to count number of items in a dictionary value that is a list

sample data:

mydictionary1={'Names':['Rohit','Ganesh','SRK','Akshay'],'age':40,'addresses':['Mumbai','Delhi','Kolkara','Banglore'],'emails':['actor.gmail.com','movie.gmail.com']}

my1={'Names':['Rohit','Ganesh','SRK','Akshay'],'age':40,'addresses':['Mumbai','Delhi','Kolkara','Banglore'],'emails':['actor.gmail.com','movie.gmail.com']}
count=0
for i in my1.values():
    if isinstance(i,list):
        count+=1
print(count)

'''
6) Write a Python program to check a dictionary is empty or not.

'''
from collections import Counter

# Input dictionaries
# Sample data
mydictionary1 = {
    'Names': ['Rohit', 'Ganesh', 'SRK', 'Akshay'],
    'age': 40,
    'addresses': ['Mumbai', 'Delhi', 'Kolkata', 'Bangalore'],
    'emails': ['actor@gmail.com', 'movie@gmail.com']
}

# Initialize a variable to store the counts
list_item_counts = {}

# Iterate through the dictionary
for key, value in mydictionary1.items():
    if isinstance(value, list):
        list_item_counts[key] = len(value)

# Print the counts
for key, count in list_item_counts.items():
    print(f"The number of items in '{key}' list is: {count}")
9) Write a Python program to create a dictionary from a string.
Note: Track the count of the letters from the string.
Sample string : 'w3resource'
Expected output: {'3': 1, 's': 1, 'r': 2, 'u': 1, 'w': 1, 'c': 1, 'e': 2, 'o': 1}
import re
string="w3resource"
char_count={}
for char in string:
    if char.isalpha():
        char_count[char] = char_count.get(char, 0) + 1

print(char_count)
or 
from collections import Counter
s1="w3resource"
dict1=Counter(s1)
print(dict1)
11) Write a Python program to get the maximum and minimum value in a dictionary.
my_dict = {'a': 100, 'b': 200, 'c': 50, 'd': 300}

# Find the maximum and minimum values in the dictionary
max_value = max(my_dict.values())
min_value = min(my_dict.values())

print(f"Maximum value: {max_value}")
print(f"Minimum value: {min_value}")
10) Write a Python program to get the key, value and item in a dictionary

e.g.
mydictionary={1:'xyz',3:'abc',5:'pqr',2:'xzz'}

output :
	key     value   
		total items are 4
mydictionary = {1: 'xyz', 3: 'abc', 5: 'pqr', 2: 'xzz'}

# Printing header
print("key\tvalue")

# Iterate through the dictionary and print key-value pairs
for key, value in mydictionary.items():
    print(f"{key}\t{value}")

# Calculate and print the total number of items in the dictionary
total_items = len(mydictionary)
print(f"Total items are {total_items}")
12) Write a Python program to map two lists into a dictionary. 

e.g. 
given
prnnos=[1,2,3,4,5,6]
names=['abc','def','pqr','lmn','xyz','uvw']

output:
{1: 'abc', 2: 'def', 3: 'pqr', 4: 'lmn', 5: 'xyz', 6: 'uvw'}
prnnos = [1, 2, 3, 4, 5, 6]
names = ['abc', 'def', 'pqr', 'lmn', 'xyz', 'uvw']

# Map the two lists into a dictionary
result_dict = {key: value for key, value in zip(prnnos, names)}

print(result_dict)
13) Write a Python program to match key values in two dictionaries. 
Sample dictionary: {'key1': 1, 'key2': 3, 'key3': 2}, {'key1': 1, 'key2': 2}
Expected output: key1: 1 is present in both x and y
d1 = {'key1': 1, 'key2': 3, 'key3': 2}
d2 = {'key1': 1, 'key2': 2}

for key in d1:
    if key in d2 and d1[key] == d2[key]:
        print("Key", key, "is present in both d1 and d2 with the same value.")
14) # Write a Python program to print a dictionary line by line. 

Players={'Rohit':{'runs':10000,'centuries':15},'Virat':{'runs':12000,'centuries':18}}

expected output:

Rohit
runs :	 10000
centuries :	 15
Virat
runs :	 12000
centuries :	 18
Players = {'Rohit': {'runs': 10000, 'centuries': 15}, 'Virat': {'runs': 12000, 'centuries': 18}}

for player, stats in Players.items():
    print(player)
    for key, value in stats.items():
        print(f"{key} : {value}")
15) Write a Python program to remove a key from a dictionary.
my_dict = {'a': 1, 'b': 2, 'c': 3}

# Remove the key 'b' from the dictionary using pop
my_dict.pop('b')

print(my_dict)
16) Write a Python program to remove spaces from dictionary keys. 

Students={'d 01':'Abc','d 0 2':'Xyz','d0 3':'Pqr'}

output:

{'d01': 'Abc', 'd02': 'Xyz', 'd03': 'Pqr'}
Students = {'d 01': 'Abc', 'd 0 2': 'Xyz', 'd0 3': 'Pqr'}

# Create a new dictionary with spaces removed from keys
new_students = {key.replace(' ', ''): value for key, value in Students.items()}

# Print the updated dictionary
print(new_students)
17) Write a Python program to sum all the items in a dictionary
# Sample dictionary
my_dict = {'a': 10, 'b': 20, 'c': 30, 'd': 40}

# Calculate the sum of all items in the dictionary
total_sum = sum(my_dict.values())

# Print the sum
print("Sum of all items in the dictionary:", total_sum)


18)# Sample dictionary
my_dict = {'a': 10, 'b': 20, 'c': 30, 'd': 40}

# Initialize a variable to store the sum
total_sum = 0

# Iterate through the values and add them to the sum
for value in my_dict.values():
    total_sum += value

# Print the sum
print("Sum of all items in the dictionary:", total_sum)
mydictionary1 = {1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36}
mydictionary2 = {7: 49, 8: 64, 9: 81, 10: 100, 11: 121, 12: 144}

19)# Merge mydictionary2 into mydictionary1 using dictionary unpacking

mydictionary1 = {1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36}
mydictionary2 = {7: 49, 8: 64, 9: 81, 10: 100, 11: 121, 12: 144}

# Merge mydictionary2 into mydictionary1 using the update() method
mydictionary1.update(mydictionary2)

# Print the merged dictionary
print(mydictionary1)

19) Write a Python script to concatenate following dictionaries to create a new one. 
Sample Dictionary :
dic1={1:10, 2:20}
dic2={3:30, 4:40}
dic3={5:50,6:60}
Expected Result : {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}
dic1 = {1: 10, 2: 20}
dic2 = {3: 30, 4: 40}
dic3 = {5: 50, 6: 60}

# Concatenate the dictionaries using dictionary unpacking
result_dict = {**dic1, **dic2, **dic3}

# Print the concatenated dictionary
print(result_dict)
